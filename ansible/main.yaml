- hosts: 'kube'
  gather_facts: yes
  tasks:
    # https://buildvirtual.net/deploy-a-kubernetes-cluster-using-ansible/

    - name: create the kube user account
      user: name=kube append=yes state=present groups=sudo createhome=yes shell=/bin/bash
      tags:
      - prepare

    - name: allow 'kube' to use sudo without needing a password
      lineinfile:
        dest: /etc/sudoers
        line: 'kube ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
      tags:
      - prepare
    
    - name: Create containerd config file
      file:
        path: "/etc/modules-load.d/containerd.conf"
        state: "touch"
      tags:
      - prepare

    - name: Add conf for containerd
      blockinfile:
        path: "/etc/modules-load.d/containerd.conf"
        block: |
               overlay
               br_netfilter
      tags:
      - prepare

    - name: Add the overlay module
      community.general.modprobe:
        name: overlay
        state: present
        persistent: "present"
      tags:
      - prepare

    - name: Add the overlay module
      community.general.modprobe:
        name: br_netfilter
        state: present
        persistent: "present"
      tags:
      - prepare
    
    - name: Set system configurations for Kubernetes networking
      file:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        state: "touch"
      tags:
      - prepare

    - name: Add conf for containerd
      blockinfile:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        block: |
                net.bridge.bridge-nf-call-iptables = 1
                net.ipv4.ip_forward = 1
                net.bridge.bridge-nf-call-ip6tables = 1
      tags:
      - prepare

      #- ansible.posix.sysctl:
    - name: Apply new settings
      command: sysctl --system
      tags:
      - prepare

    - name: install containerd and utilities
      ansible.builtin.package:
        name:
          - containerd
          - apt-transport-https
          - curl
          - wget
        state: present
      tags:
      - prepare
    # we need to reinstall containerd: https://serverfault.com/questions/1118051/failed-to-run-kubelet-validate-service-connection-cri-v1-runtime-api-is-not-im
    - name: workaround to install the correct version of containerd
      shell: |
            wget https://github.com/containerd/containerd/releases/download/v1.6.12/containerd-1.6.12-linux-amd64.tar.gz
            tar xvf containerd-1.6.12-linux-amd64.tar.gz
            systemctl stop containerd
            cd bin
            cp * /usr/bin/
            rm -rf $HOME/bin
      args:
        chdir: $HOME
        creates: containerd_installed.txt
      tags:
      - prepare


    - name: create /etc/containerd
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
      tags:
      - prepare

    - name: Configure containerd
      command: containerd config default | tee /etc/containerd/config.toml
      tags:
      - prepare
    
    - name: Configure containerd systemd
      ansible.builtin.systemd:
        state: restarted
        enabled: true
        name: containerd
      tags:
      - prepare

    - name: disable swap
      shell: |
              swapoff -a
              sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
      tags:
      - prepare

    - name: add google key
      shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
      tags:
      - prepare
    
    - name: Create kubernetes repo file
      file:
        path: "/etc/apt/sources.list.d/kubernetes.list"
        state: "touch"
      tags:
      - prepare

    - name: Add K8s Source
      blockinfile:
        path: "/etc/apt/sources.list.d/kubernetes.list"
        block: |
              deb https://apt.kubernetes.io/ kubernetes-xenial main
      tags:
      - prepare

    - name: Update repos
      command: apt update
      tags:
      - prepare

    - name: install kube packages
      ansible.builtin.package:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
      tags:
      - prepare

- hosts: masters
  gather_facts: yes
  tasks:
    - name: install python pip
      ansible.builtin.package:
        name:
          - python3-pip
        state: present
      tags:
      - bootstrap
    
    - name: install kubernetes python library
      ansible.builtin.pip:
        name: kubernetes
      tags:
      - bootstrap

    - name: copy kube-flannel.yaml
      copy:
        src: kube-flannel.yaml
        dest: /home/kube/kube-flannel.yaml
        mode: 0777
      tags:
      - bootstrap
    
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16 
      args:
        chdir: /home/kube
        creates: cluster_initialized.txt
      tags:
      - bootstrap

    - name: create .kube directory
      file:
        path: /home/kube/.kube
        state: directory
        mode: 0755
      tags:
      - bootstrap

    - name: copies admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/kube/.kube/config
        remote_src: yes
        owner: kube
      tags:
      - bootstrap

    - name: install Container Network Interface
      kubernetes.core.k8s:
        state: present
        src: '/home/kube/kube-flannel.yaml' 
        kubeconfig: /home/kube/.kube/config
      tags:
      - bootstrap
    
    - name: Get the token for joining the worker nodes
      shell: kubeadm token create  --print-join-command > /tmp/kubernetes_join_command.txt
      tags:
      - bootstrap
      
    - name: Copy join command to local file.
      fetch:
       src: /tmp/kubernetes_join_command.txt
       dest: kubernetes_join_command.txt
       mode: 0777
      tags:
      - bootstrap
    
- hosts: slaves
  gather_facts: yes

  tasks:
    - name: Copy join command from Ansiblehost to the worker nodes.
      become: yes
      copy:
       src: files/kubernetes_join_command.txt
       dest: /tmp
       mode: 0777
      tags:
      - join

    - name: Join the Worker nodes to the cluster.
      become: yes
      command: sh /tmp/kubernetes_join_command.txt
      args:
        chdir: /home/kube
        creates: cluster_joined.txt
      tags:
       - join

- hosts: masters

  tasks:
    - name: Create a k8s namespace
      kubernetes.core.k8s:
        name: kiratech-test
        api_version: v1
        kind: Namespace
        state: present
        kubeconfig: /home/kube/.kube/config
      tags:
      - health

    - name: assign role to worker
      shell: |
        kubectl --kubeconfig /home/kube/.kube/config label node slave-01 node-role.kubernetes.io/worker=worker
        kubectl --kubeconfig /home/kube/.kube/config label node slave-02 node-role.kubernetes.io/worker=worker
      args:
        creates: role_assigend.txt
    
    - name: Copy kube-bench job.yaml
      become: yes
      copy:
       src: files/job.yaml
       dest: /home/kube
       mode: 0755
      tags:
      - health

    - name: apply kube-bench
      kubernetes.core.k8s:
        state: present
        src: '/home/kube/kube-flannel.yaml' 
        kubeconfig: /home/kube/.kube/config
      tags:
      - health